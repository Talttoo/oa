2020-07-14 16:08:40.449 INFO  --- [SpringApplication.java:651][restartedMain] - No active profile set, falling back to default profiles: default
2020-07-14 16:08:44.721 WARN  --- [URLConfigurationSource.java:121][restartedMain] - No URLs will be polled as dynamic configuration sources.
2020-07-14 16:08:44.722 INFO  --- [URLConfigurationSource.java:122][restartedMain] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:08:44.727 WARN  --- [URLConfigurationSource.java:121][restartedMain] - No URLs will be polled as dynamic configuration sources.
2020-07-14 16:08:44.727 INFO  --- [URLConfigurationSource.java:122][restartedMain] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:08:46.586 INFO  --- [DiscoveryClient.java:365][restartedMain] - Initializing Eureka in region us-east-1
2020-07-14 16:08:46.702 INFO  --- [DiscoveryJerseyProvider.java:70][restartedMain] - Using JSON encoding codec LegacyJacksonJson
2020-07-14 16:08:46.703 INFO  --- [DiscoveryJerseyProvider.java:71][restartedMain] - Using JSON decoding codec LegacyJacksonJson
2020-07-14 16:08:46.812 INFO  --- [DiscoveryJerseyProvider.java:80][restartedMain] - Using XML encoding codec XStreamXml
2020-07-14 16:08:46.813 INFO  --- [DiscoveryJerseyProvider.java:81][restartedMain] - Using XML decoding codec XStreamXml
2020-07-14 16:08:47.036 INFO  --- [ConfigClusterResolver.java:43][restartedMain] - Resolving eureka endpoints via configuration
2020-07-14 16:08:47.290 INFO  --- [DiscoveryClient.java:976][restartedMain] - Disable delta property : false
2020-07-14 16:08:47.291 INFO  --- [DiscoveryClient.java:977][restartedMain] - Single vip registry refresh property : null
2020-07-14 16:08:47.292 INFO  --- [DiscoveryClient.java:978][restartedMain] - Force full registry fetch : false
2020-07-14 16:08:47.292 INFO  --- [DiscoveryClient.java:979][restartedMain] - Application is null : false
2020-07-14 16:08:47.292 INFO  --- [DiscoveryClient.java:980][restartedMain] - Registered Applications size is zero : true
2020-07-14 16:08:47.292 INFO  --- [DiscoveryClient.java:982][restartedMain] - Application version is -1: true
2020-07-14 16:08:47.293 INFO  --- [DiscoveryClient.java:1065][restartedMain] - Getting all instance registry info from the eureka server
2020-07-14 16:08:47.449 INFO  --- [DiscoveryClient.java:1074][restartedMain] - The response status is 200
2020-07-14 16:08:47.452 INFO  --- [DiscoveryClient.java:1288][restartedMain] - Starting heartbeat executor: renew interval is: 30
2020-07-14 16:08:47.455 INFO  --- [InstanceInfoReplicator.java:60][restartedMain] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-14 16:08:47.459 INFO  --- [DiscoveryClient.java:465][restartedMain] - Discovery Client initialized at timestamp 1594714127458 with initial instances count: 1
2020-07-14 16:08:47.470 INFO  --- [DiscoveryClient.java:1323][restartedMain] - Saw local status change event StatusChangeEvent [timestamp=1594714127470, current=UP, previous=STARTING]
2020-07-14 16:08:47.475 INFO  --- [DiscoveryClient.java:844][DiscoveryClient-InstanceInfoReplicator-0] - DiscoveryClient_HOUTAIGUANLI/192.168.0.102:houtaiguanli:9090: registering service...
2020-07-14 16:08:47.529 INFO  --- [DiscoveryClient.java:853][DiscoveryClient-InstanceInfoReplicator-0] - DiscoveryClient_HOUTAIGUANLI/192.168.0.102:houtaiguanli:9090 - registration status: 204
2020-07-14 16:08:47.554 INFO  --- [StartupInfoLogger.java:61][restartedMain] - Started OasystemApplication in 10.152 seconds (JVM running for 12.237)
2020-07-14 16:11:38.284 INFO  --- [HikariDataSource.java:110][http-nio-9090-exec-2] - HikariPool-1 - Starting...
2020-07-14 16:11:38.287 WARN  --- [DriverDataSource.java:70][http-nio-9090-exec-2] - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2020-07-14 16:11:38.834 INFO  --- [HikariDataSource.java:123][http-nio-9090-exec-2] - HikariPool-1 - Start completed.
2020-07-14 16:13:47.300 INFO  --- [ConfigClusterResolver.java:43][AsyncResolver-bootstrap-executor-0] - Resolving eureka endpoints via configuration
2020-07-14 16:16:44.869 ERROR --- [GlobalExceptionHandler.java:44][http-nio-9090-exec-9] - 异常
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.julong.oasystem.service.TestService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Query map can only be present once.
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:178)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:101)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:1266)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:260)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1531)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1488)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1269)
	at org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver$1.getTarget(ContextAnnotationAutowireCandidateResolver.java:90)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:192)
	at com.sun.proxy.$Proxy116.sendremindmessages(Unknown Source)
	at com.julong.oasystem.controller.BController.sendRemindMessage(BController.java:79)
	at com.julong.oasystem.controller.BController$$FastClassBySpringCGLIB$$e4cdd59f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.julong.oasystem.controller.BController$$EnhancerBySpringCGLIB$$d8a8274e.sendRemindMessage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: Query map can only be present once.
	at feign.Util.checkState(Util.java:130)
	at org.springframework.cloud.openfeign.annotation.RequestParamParameterProcessor.processArgument(RequestParamParameterProcessor.java:56)
	at org.springframework.cloud.openfeign.support.SpringMvcContract.processAnnotationsOnParameter(SpringMvcContract.java:292)
	at feign.Contract$BaseContract.parseAndValidateMetadata(Contract.java:110)
	at org.springframework.cloud.openfeign.support.SpringMvcContract.parseAndValidateMetadata(SpringMvcContract.java:188)
	at feign.Contract$BaseContract.parseAndValidatateMetadata(Contract.java:66)
	at feign.ReflectiveFeign$ParseHandlersByName.apply(ReflectiveFeign.java:154)
	at feign.ReflectiveFeign.newInstance(ReflectiveFeign.java:52)
	at feign.Feign$Builder.target(Feign.java:251)
	at org.springframework.cloud.openfeign.HystrixTargeter.target(HystrixTargeter.java:36)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:238)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:267)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:247)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:171)
	... 87 common frames omitted
2020-07-14 16:16:44.872 WARN  --- [AbstractHandlerExceptionResolver.java:199][http-nio-9090-exec-9] - Resolved [org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.julong.oasystem.service.TestService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Query map can only be present once.]
2020-07-14 16:18:47.305 INFO  --- [ConfigClusterResolver.java:43][AsyncResolver-bootstrap-executor-0] - Resolving eureka endpoints via configuration
2020-07-14 16:23:47.310 INFO  --- [ConfigClusterResolver.java:43][AsyncResolver-bootstrap-executor-0] - Resolving eureka endpoints via configuration
